name: Create Release

on:
  push:
    branches:
      - "main"
    paths:
      - src/**/*.rs

jobs:
  bump-version:
    name: ⬆️ Bump Version ⬆️
    uses: ./.github/workflows/bump-version.yml
    with:
      version-type: "minor"
    secrets: inherit

  release:
    name: 🚀 Create Release 🚀
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ needs.bump-version.outputs.version }}
          release_name: rhc ${{ needs.bump-version.outputs.version }}
          body_path: RELEASE.md
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      version: ${{ needs.bump-version.outputs.version }}

  build-release:
    name: 🏗 Build Release 🏗
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, m1] 
        include:
        - build: linux
          os: ubuntu-22.04
          rust: stable
          target: x86_64-unknown-linux-musl
        - build: macos
          os: macos-12
          rust: stable
          target: x86_64-apple-darwin
        - build: m1
          os: macos-12
          rust: stable
          target: aarch64-apple-darwin
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: ⚙️ Install Rust ⚙️
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
    - name: 🔨 Build release binary 🔨
      run: cargo build --verbose --release --target ${{ matrix.target }}

    - name: ✨ Strip release binary ✨
      run: strip "target/${{ matrix.target }}/release/rhc"

    - name: 🔧 Build archive 🔧
      shell: bash
      run: |
        staging="rhc-${{ needs.release.outputs.version }}-${{ matrix.target }}"
        mkdir $staging
        cp README.md "$staging/"
        cp "target/${{ matrix.target }}/release/rhc" "$staging/"
        tar czf "$staging.tar.gz" "$staging"
        echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV

    - name: 📦 Upload release archive 📦
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ${{ env.ASSET }}
        asset_name: ${{ env.ASSET }}
        asset_content_type: application/octet-stream